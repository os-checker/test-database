{
  "repo": {
    "user": "The-Swarm-Corporation",
    "repo": "swarms-rs"
  },
  "data": [
    {
      "user": "The-Swarm-Corporation",
      "repo": "swarms-rs",
      "pkg": "swarms-rs",
      "count": 71,
      "raw_reports": [
        {
          "file": "tests/persistence_tests.rs",
          "features": "",
          "count": 15,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/tests/persistence_tests.rs (original lines from 8 to 8)\n-    \n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/tests/persistence_tests.rs (original lines from 11 to 11)\n-    \n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/tests/persistence_tests.rs (original lines from 14 to 14)\n-    \n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/tests/persistence_tests.rs (original lines from 22 to 22)\n-    \n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/tests/persistence_tests.rs (original lines from 25 to 25)\n-    \n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/tests/persistence_tests.rs (original lines from 28 to 28)\n-    \n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/tests/persistence_tests.rs (original lines from 31 to 31)\n-    \n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/tests/persistence_tests.rs (original lines from 41 to 41)\n-    \n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/tests/persistence_tests.rs (original lines from 44 to 44)\n-    \n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/tests/persistence_tests.rs (original lines from 46 to 49)\n-    assert!(compressed.len() < test_data.len(), \n-        \"Compressed size ({}) should be less than original size ({})\", \n-        compressed.len(), test_data.len());\n-    \n+    assert!(\n+        compressed.len() < test_data.len(),\n+        \"Compressed size ({}) should be less than original size ({})\",\n+        compressed.len(),\n+        test_data.len()\n+    );\n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/tests/persistence_tests.rs (original lines from 57 to 57)\n-    \n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/tests/persistence_tests.rs (original lines from 59 to 59)\n-    \n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/tests/persistence_tests.rs (original lines from 62 to 62)\n-    \n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/tests/persistence_tests.rs (original lines from 65 to 65)\n-    \n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/tests/persistence_tests.rs (original lines from 67 to 67)\n-} \n+}\n+\n"
            ]
          }
        },
        {
          "file": "src/agent/swarms_agent.rs",
          "features": "",
          "count": 8,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/agent/swarms_agent.rs (original lines from 27 to 27)\n+use crate::structs::agent::{Agent, AgentConfig, AgentError};\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/agent/swarms_agent.rs (original lines from 40 to 41)\n-use crate::structs::agent::{Agent, AgentConfig, AgentError};\n-\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/agent/swarms_agent.rs (original lines from 288 to 288)\n-            llm::completion::AssistantContent::Text(text) => Ok(ChatResponse::Text(text.text)), // <--- return Text\n+            llm::completion::AssistantContent::Text(text) => Ok(ChatResponse::Text(text.text)), /* <--- return Text */\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/agent/swarms_agent.rs (original lines from 469 to 471)\n-                        \"You previously called task_evaluator and indicated the task was not complete. The required next step or context provided was: '{}'. \\\n-                        Focus ONLY on addressing this context. DO NOT call task_evaluator again in this turn. Proceed with the task based on the context.\",\n-                        last_response_text // last_response is the context provided by task_evaluator\n+                        \"You previously called task_evaluator and indicated the task was not \\\n+                         complete. The required next step or context provided was: '{}'. Focus \\\n+                         ONLY on addressing this context. DO NOT call task_evaluator again in \\\n+                         this turn. Proceed with the task based on the context.\",\n+                        last_response_text /* last_response is the context provided by task_evaluator */\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/agent/swarms_agent.rs (original lines from 477 to 477)\n-                        \"Now, you are in loop {} of {}, The dialogue will terminate upon reaching maximum iteration count. You must:\n+                        \"Now, you are in loop {} of {}, The dialogue will terminate upon reaching \\\n+                         maximum iteration count. You must:\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/agent/swarms_agent.rs (original lines from 482 to 482)\n-                        You should consider to use tools if they can help, but only if they are relevant to the task and are necessary for the task.\n+                        You should consider to use tools if they can help, but only if they are \\\n+                         relevant to the task and are necessary for the task.\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/agent/swarms_agent.rs (original lines from 573 to 573)\n-                                                \"Failed to parse task status from task_evaluator: {}. Raw result: {}\",\n+                                                \"Failed to parse task status from task_evaluator: \\\n+                                                 {}. Raw result: {}\",\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/agent/swarms_agent.rs (original lines from 581 to 581)\n-                                                \"Error parsing task_evaluator result. Raw output: {}\",\n+                                                \"Error parsing task_evaluator result. Raw output: \\\n+                                                 {}\",\n"
            ]
          }
        },
        {
          "file": "examples/sequential_workflow.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/sequential_workflow.rs (original lines from 27 to 30)\n-            \"You are a Market Analyst specializing in financial markets. Your task is to analyze current market conditions, \\\n-            identify trends, and provide a comprehensive market overview. Focus on major indices, sector performance, \\\n-            economic indicators, and global market influences. Your analysis will be used by the Risk Assessor to evaluate \\\n-            potential investment risks.\",\n+            \"You are a Market Analyst specializing in financial markets. Your task is to analyze \\\n+             current market conditions, identify trends, and provide a comprehensive market \\\n+             overview. Focus on major indices, sector performance, economic indicators, and \\\n+             global market influences. Your analysis will be used by the Risk Assessor to \\\n+             evaluate potential investment risks.\",\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/sequential_workflow.rs (original lines from 44 to 48)\n-            \"You are a Risk Assessor in the financial domain. Based on the market analysis provided, \\\n-            your job is to identify and quantify potential risks associated with different investment options. \\\n-            Consider volatility, liquidity risks, geopolitical factors, and economic uncertainties. \\\n-            Provide a risk rating (Low, Medium, High) for each major market sector. \\\n-            Your assessment will be used by the Investment Strategist to formulate trading recommendations.\"\n+            \"You are a Risk Assessor in the financial domain. Based on the market analysis \\\n+             provided, your job is to identify and quantify potential risks associated with \\\n+             different investment options. Consider volatility, liquidity risks, geopolitical \\\n+             factors, and economic uncertainties. Provide a risk rating (Low, Medium, High) for \\\n+             each major market sector. Your assessment will be used by the Investment Strategist \\\n+             to formulate trading recommendations.\",\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/sequential_workflow.rs (original lines from 62 to 66)\n-            \"You are an Investment Strategist who creates actionable trading and investment recommendations. \\\n-            Using the market analysis and risk assessment provided, develop a comprehensive investment strategy. \\\n-            Include specific asset allocation recommendations (stocks, bonds, commodities, etc.), \\\n-            entry/exit points, position sizing based on risk tolerance, and timeframes for investments. \\\n-            Your recommendations should be practical, considering both short-term opportunities and long-term portfolio stability.\"\n+            \"You are an Investment Strategist who creates actionable trading and investment \\\n+             recommendations. Using the market analysis and risk assessment provided, develop a \\\n+             comprehensive investment strategy. Include specific asset allocation recommendations \\\n+             (stocks, bonds, commodities, etc.), entry/exit points, position sizing based on risk \\\n+             tolerance, and timeframes for investments. Your recommendations should be practical, \\\n+             considering both short-term opportunities and long-term portfolio stability.\",\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/sequential_workflow.rs (original lines from 83 to 83)\n-        .description(\"A sequential workflow for financial market analysis, risk assessment, and investment recommendations\")\n+        .description(\n+            \"A sequential workflow for financial market analysis, risk assessment, and investment \\\n+             recommendations\",\n+        )\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/sequential_workflow.rs (original lines from 88 to 88)\n-    let result = workflow.run(\"Analyze the current technology sector and provide investment recommendations considering recent market volatility.\").await?;\n+    let result = workflow\n+        .run(\n+            \"Analyze the current technology sector and provide investment recommendations \\\n+             considering recent market volatility.\",\n+        )\n+        .await?;\n"
            ]
          }
        },
        {
          "file": "benches/graph_workflow_benchmarks.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/benches/graph_workflow_benchmarks.rs (original lines from 1 to 2)\n-use criterion::{Criterion, black_box, criterion_group, criterion_main};\n-use futures::future::{self, BoxFuture};\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/benches/graph_workflow_benchmarks.rs (original lines from 4 to 4)\n-use tokio::runtime::Runtime;\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/benches/graph_workflow_benchmarks.rs (original lines from 6 to 6)\n+use criterion::{Criterion, black_box, criterion_group, criterion_main};\n+use futures::future::{self, BoxFuture};\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/benches/graph_workflow_benchmarks.rs (original lines from 10 to 10)\n+use tokio::runtime::Runtime;\n"
            ]
          }
        },
        {
          "file": "examples/concurrent_workflow_run.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/concurrent_workflow_run.rs (original lines from 28 to 31)\n-       and identify key trends, patterns, and technical indicators. Your task is to provide \\\n-       a comprehensive market analysis including support/resistance levels, volume analysis, \\\n-       and overall market sentiment. Focus only on analyzing current market conditions \\\n-       without making specific trading recommendations. End your analysis with <DONE>.\",\n+             and identify key trends, patterns, and technical indicators. Your task is to provide \\\n+             a comprehensive market analysis including support/resistance levels, volume \\\n+             analysis, and overall market sentiment. Focus only on analyzing current market \\\n+             conditions without making specific trading recommendations. End your analysis with \\\n+             <DONE>.\",\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/concurrent_workflow_run.rs (original lines from 46 to 49)\n-       develop a comprehensive trading strategy. Your task is to analyze the given market \\\n-       information and create a strategy that includes potential entry and exit points, \\\n-       position sizing recommendations, and order types. Focus solely on strategy development \\\n-       without performing risk assessment. End your strategy with <DONE>.\",\n+             develop a comprehensive trading strategy. Your task is to analyze the given market \\\n+             information and create a strategy that includes potential entry and exit points, \\\n+             position sizing recommendations, and order types. Focus solely on strategy \\\n+             development without performing risk assessment. End your strategy with <DONE>.\",\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/concurrent_workflow_run.rs (original lines from 63 to 67)\n-            \"You are a risk assessment specialist for trading. Your role is to evaluate \\\n-       potential risks in the provided market scenario. Calculate appropriate risk metrics \\\n-       such as volatility, maximum drawdown, and risk-reward ratios based solely on the \\\n-       market information provided. Provide an independent risk assessment without \\\n-       considering specific trading strategies. End your assessment with <DONE>.\",\n+            \"You are a risk assessment specialist for trading. Your role is to evaluate potential \\\n+             risks in the provided market scenario. Calculate appropriate risk metrics such as \\\n+             volatility, maximum drawdown, and risk-reward ratios based solely on the market \\\n+             information provided. Provide an independent risk assessment without considering \\\n+             specific trading strategies. End your assessment with <DONE>.\",\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/concurrent_workflow_run.rs (original lines from 91 to 93)\n-            \"BTC/USD is approaching a key resistance level at $50,000 with increasing volume. \\\n-             RSI is at 68 and MACD shows bullish momentum. Develop a trading strategy for a \\\n-             potential breakout scenario.\",\n+            \"BTC/USD is approaching a key resistance level at $50,000 with increasing volume. RSI \\\n+             is at 68 and MACD shows bullish momentum. Develop a trading strategy for a potential \\\n+             breakout scenario.\",\n"
            ]
          }
        },
        {
          "file": "examples/concurrent_workflow_run_batch.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/concurrent_workflow_run_batch.rs (original lines from 28 to 31)\n-            symptoms and provide a detailed assessment of what these symptoms might indicate. \\\n-            Focus only on the symptom patterns, their severity, duration, and potential \\\n-            physiological implications. Do not attempt to provide a definitive diagnosis or \\\n-            treatment recommendations. End your analysis with <DONE>.\",\n+             symptoms and provide a detailed assessment of what these symptoms might indicate. \\\n+             Focus only on the symptom patterns, their severity, duration, and potential \\\n+             physiological implications. Do not attempt to provide a definitive diagnosis or \\\n+             treatment recommendations. End your analysis with <DONE>.\",\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/concurrent_workflow_run_batch.rs (original lines from 46 to 50)\n-            information about various medical conditions that might be relevant to the described \\\n-            case. Present information about common conditions that match the described scenario, \\\n-            including their typical presentations, risk factors, and general management approaches \\\n-            from medical literature. Focus only on providing factual medical information without \\\n-            making specific recommendations for this particular case. End your response with <DONE>.\",\n+             information about various medical conditions that might be relevant to the described \\\n+             case. Present information about common conditions that match the described scenario, \\\n+             including their typical presentations, risk factors, and general management \\\n+             approaches from medical literature. Focus only on providing factual medical \\\n+             information without making specific recommendations for this particular case. End \\\n+             your response with <DONE>.\",\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/concurrent_workflow_run_batch.rs (original lines from 65 to 70)\n-            materials about health conditions and medical procedures. Based on the medical scenario \\\n-            described, develop clear, accessible information that would be helpful for a patient \\\n-            or their family to understand the general medical context. Focus on creating standalone \\\n-            educational content without attempting to provide specific medical advice for this case. \\\n-            Include general self-care recommendations and when to seek medical attention. \\\n-            End your response with <DONE>.\",\n+             materials about health conditions and medical procedures. Based on the medical \\\n+             scenario described, develop clear, accessible information that would be helpful for \\\n+             a patient or their family to understand the general medical context. Focus on \\\n+             creating standalone educational content without attempting to provide specific \\\n+             medical advice for this case. Include general self-care recommendations and when to \\\n+             seek medical attention. End your response with <DONE>.\",\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/concurrent_workflow_run_batch.rs (original lines from 96 to 101)\n-        \"Patient presents with fever, cough, and shortness of breath for 5 days. \\\n-         History of asthma. Provide your specialized analysis of this case.\",\n-        \"Elderly patient with sudden onset confusion, headache, and neck stiffness. \\\n-         No history of trauma. Analyze this case from your area of expertise.\",\n-        \"Child with rash, high fever, and swollen lymph nodes for 3 days. \\\n-         Previously healthy. Offer your specialized perspective on this scenario.\",\n+        \"Patient presents with fever, cough, and shortness of breath for 5 days. History of \\\n+         asthma. Provide your specialized analysis of this case.\",\n+        \"Elderly patient with sudden onset confusion, headache, and neck stiffness. No history of \\\n+         trauma. Analyze this case from your area of expertise.\",\n+        \"Child with rash, high fever, and swollen lymph nodes for 3 days. Previously healthy. \\\n+         Offer your specialized perspective on this scenario.\",\n"
            ]
          }
        },
        {
          "file": "examples/tool.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/tool.rs (original lines from 55 to 56)\n-        .run(\"\n-        Use docker to run a postgres database(newest version, alpine as base), set the network mode to host.\n+        .run(\n+            \"\n+        Use docker to run a postgres database(newest version, alpine as base), set the network \\\n+             mode to host.\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/tool.rs (original lines from 59 to 60)\n-        \".to_string()\n-    )\n+        \"\n+            .to_string(),\n+        )\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/tool.rs (original lines from 112 to 112)\n-    #[doc = \"The commands to execute, can execute multiple commands at once.\"]\n+    /// The commands to execute, can execute multiple commands at once.\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/tool.rs (original lines from 132 to 132)\n-    #[doc = \"The first field\"]\n+    /// The first field\n"
            ]
          }
        },
        {
          "file": "src/llm/provider/openai.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/llm/provider/openai.rs (original lines from 22 to 22)\n-    agent::SwarmsAgentBuilder, // Updated import path - now from crate::agent instead of crate::structs::agent\n+    agent::SwarmsAgentBuilder, /* Updated import path - now from crate::agent instead of crate::structs::agent */\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/llm/provider/openai.rs (original lines from 261 to 273)\n-                        .into_iter()\n-                        .map(|content| match content {\n-                            llm::completion::UserContent::Text(text) => Ok(ChatCompletionRequestMessageContentPartText::from(text).into()),\n-                            llm::completion::UserContent::Image(image) => Ok(ChatCompletionRequestMessageContentPartImage::from(image).into()),\n-                            llm::completion::UserContent::Audio(audio) => {\n-                                if audio.format != Some(llm::completion::ContentFormat::Base64)\n-                                    || (audio.media_type\n-                                        != Some(llm::completion::AudioMediaType::WAV)\n-                                        && audio.media_type\n-                                            != Some(llm::completion::AudioMediaType::MP3))\n-                                {\n-                                    return Err(CompletionError::Request(\"Only support wav and mp3 for now, and must be base64 encoded\".into()))\n-                                }\n+                            .into_iter()\n+                            .map(|content| match content {\n+                                llm::completion::UserContent::Text(text) => {\n+                                    Ok(ChatCompletionRequestMessageContentPartText::from(text)\n+                                        .into())\n+                                },\n+                                llm::completion::UserContent::Image(image) => {\n+                                    Ok(ChatCompletionRequestMessageContentPartImage::from(image)\n+                                        .into())\n+                                },\n+                                llm::completion::UserContent::Audio(audio) => {\n+                                    if audio.format != Some(llm::completion::ContentFormat::Base64)\n+                                        || (audio.media_type\n+                                            != Some(llm::completion::AudioMediaType::WAV)\n+                                            && audio.media_type\n+                                                != Some(llm::completion::AudioMediaType::MP3))\n+                                    {\n+                                        return Err(CompletionError::Request(\n+                                            \"Only support wav and mp3 for now, and must be base64 \\\n+                                             encoded\"\n+                                                .into(),\n+                                        ));\n+                                    }\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/llm/provider/openai.rs (original lines from 275 to 279)\n-                                Ok(ChatCompletionRequestMessageContentPartAudio::from(audio).into())\n-                            }\n-                            _ => unimplemented!(\"Unsupported content type\"),\n-                        })\n-                        .collect::<Result<Vec<ChatCompletionRequestUserMessageContentPart>, _>>()?;\n+                                    Ok(ChatCompletionRequestMessageContentPartAudio::from(audio)\n+                                        .into())\n+                                },\n+                                _ => unimplemented!(\"Unsupported content type\"),\n+                            })\n+                            .collect::<Result<Vec<ChatCompletionRequestUserMessageContentPart>, _>>(\n+                            )?;\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/llm/provider/openai.rs (original lines from 317 to 317)\n-                                    return Err(CompletionError::Request(\"Only support wav and mp3 for now, and must be base64 encoded\".into()));\n+                                    return Err(CompletionError::Request(\n+                                        \"Only support wav and mp3 for now, and must be base64 \\\n+                                         encoded\"\n+                                            .into(),\n+                                    ));\n"
            ]
          }
        },
        {
          "file": "src/structs/concurrent_workflow.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/structs/concurrent_workflow.rs (original lines from 14 to 14)\n+use super::swarm::MetadataSchemaMap;\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/structs/concurrent_workflow.rs (original lines from 22 to 23)\n-use super::swarm::MetadataSchemaMap;\n-\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/structs/concurrent_workflow.rs (original lines from 232 to 233)\n-    use crate::structs::{conversation::Content, test_utils::create_mock_agent};\n-\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/structs/concurrent_workflow.rs (original lines from 235 to 235)\n+    use crate::structs::{conversation::Content, test_utils::create_mock_agent};\n"
            ]
          }
        },
        {
          "file": "src/structs/agent.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/structs/agent.rs (original lines from 1 to 2)\n-use crate::structs::persistence;\n-use crate::structs::tool::ToolError;\n+use std::collections::HashSet;\n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/structs/agent.rs (original lines from 5 to 5)\n-use std::collections::HashSet;\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/structs/agent.rs (original lines from 8 to 8)\n+\n+use crate::structs::persistence;\n+use crate::structs::tool::ToolError;\n"
            ]
          }
        },
        {
          "file": "benches/concurrent_workflow_benchmarks.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/benches/concurrent_workflow_benchmarks.rs (original lines from 3 to 4)\n-use tokio::runtime::Runtime;\n-\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/benches/concurrent_workflow_benchmarks.rs (original lines from 9 to 9)\n+use tokio::runtime::Runtime;\n"
            ]
          }
        },
        {
          "file": "src/structs/graph_workflow.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/structs/graph_workflow.rs (original lines from 582 to 583)\n-    use crate::structs::test_utils::{MockAgent, create_failing_agent, create_mock_agent};\n-\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/structs/graph_workflow.rs (original lines from 585 to 585)\n+    use crate::structs::test_utils::{MockAgent, create_failing_agent, create_mock_agent};\n"
            ]
          }
        },
        {
          "file": "src/structs/test_utils.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/structs/test_utils.rs (original lines from 4 to 5)\n-use crate::structs::agent::AgentError;\n-\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/structs/test_utils.rs (original lines from 7 to 7)\n+use crate::structs::agent::AgentError;\n"
            ]
          }
        },
        {
          "file": "src/structs/tool.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/structs/tool.rs (original lines from 1 to 1)\n+use std::{future::Future, ops::Deref, sync::Arc};\n+\n",
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/structs/tool.rs (original lines from 8 to 8)\n-use std::{future::Future, ops::Deref, sync::Arc};\n"
            ]
          }
        },
        {
          "file": "/tmp/check/repo/The-Swarm-Corporation/swarms-rs/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     backoff\nVersion:   0.4.0\nWarning:   unmaintained\nTitle:     `backoff` is unmainted.\nDate:      2025-03-04\nID:        RUSTSEC-2025-0012\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0012\nDependency tree:\nbackoff 0.4.0\n└── async-openai 0.28.1\n    └── swarms-rs 0.1.5\n        ├── knowledge-graph-memory-server 0.1.0\n        ├── fetch-mcp 0.1.0\n        ├── browser-use 0.1.0\n        └── binance-swarms-agent 0.1.0\n\nCrate:     dotenv\nVersion:   0.15.0\nWarning:   unmaintained\nTitle:     dotenv is Unmaintained\nDate:      2021-12-24\nID:        RUSTSEC-2021-0141\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0141\nDependency tree:\ndotenv 0.15.0\n├── swarms-rs 0.1.5\n│   ├── knowledge-graph-memory-server 0.1.0\n│   ├── fetch-mcp 0.1.0\n│   ├── browser-use 0.1.0\n│   └── binance-swarms-agent 0.1.0\n├── knowledge-graph-memory-server 0.1.0\n├── fetch-mcp 0.1.0\n├── browser-use 0.1.0\n└── binance-swarms-agent 0.1.0\n\nCrate:     instant\nVersion:   0.1.13\nWarning:   unmaintained\nTitle:     `instant` is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0384\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0384\nDependency tree:\ninstant 0.1.13\n└── backoff 0.4.0\n    └── async-openai 0.28.1\n        └── swarms-rs 0.1.5\n            ├── knowledge-graph-memory-server 0.1.0\n            ├── fetch-mcp 0.1.0\n            ├── browser-use 0.1.0\n            └── binance-swarms-agent 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rmcp 0.1.5\n│   └── binance-tools 0.1.0\n└── rmcp 0.1.5\n    └── swarms-rs 0.1.5\n        ├── knowledge-graph-memory-server 0.1.0\n        ├── fetch-mcp 0.1.0\n        ├── browser-use 0.1.0\n        └── binance-swarms-agent 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 756,\n    \"last-commit\": \"dde35430a1a89ed691fb4c0a0934268651719319\",\n    \"last-updated\": \"2025-04-30T14:13:20+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 351\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"backoff\",\n          \"version\": \"0.4.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"b62ddb9cb1ec0a098ad4bbf9344d0713fa193ae1a80af55febcff2627b6a00c1\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.31\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"getrandom\",\n              \"version\": \"0.2.16\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"instant\",\n              \"version\": \"0.1.13\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.16\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"rand\",\n              \"version\": \"0.8.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"tokio\",\n              \"version\": \"1.44.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0012\",\n          \"package\": \"backoff\",\n          \"title\": \"`backoff` is unmainted.\",\n          \"description\": \"The [backoff](https://crates.io/crates/backoff) crate is no longer actively maintained. For exponential backoffs/retrying, you can use the [backon](https://crates.io/crates/backon) crate.\",\n          \"date\": \"2025-03-04\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/ihrwein/backoff/issues/66\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"dotenv\",\n          \"version\": \"0.15.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"77c90badedccf4105eca100756a0b1289e191f6fcbdadd3cee1d2f614f97da8f\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0141\",\n          \"package\": \"dotenv\",\n          \"title\": \"dotenv is Unmaintained\",\n          \"description\": \"dotenv by description is meant to be used in development or testing only.\\n\\nUsing this in production may or may not be advisable.\\n\\n## Alternatives\\n\\nThe below may or may not be feasible alternative(s):\\n- [dotenvy](https://crates.io/crates/dotenvy)\",\n          \"date\": \"2021-12-24\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dotenv-rs/dotenv/issues/74\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"instant\",\n          \"version\": \"0.1.13\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222\",\n          \"dependencies\": [\n            {\n              \"name\": \"cfg-if\",\n              \"version\": \"1.0.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0384\",\n          \"package\": \"instant\",\n          \"title\": \"`instant` is unmaintained\",\n          \"description\": \"This crate is no longer maintained, and the author recommends using the maintained [`web-time`] crate instead.\\n\\n[`web-time`]: https://crates.io/crates/web-time\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [\n            \"https://crates.io/crates/instant/0.1.13\",\n            \"https://github.com/sebcrozet/instant/issues/52\"\n          ],\n          \"source\": null,\n          \"url\": null,\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=swarms-rs, checker=SemverChecks\n// toolchain=stable, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs\n// cmd=cargo +nightly-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-01 13:29:22.393832269 +08:00:00\n    Building swarms-rs v0.1.5 (current)\n       Built [  33.949s] (current)\n     Parsing swarms-rs v0.1.5 (current)\nerror: unsupported rustdoc format v45 for file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/target/semver-checks/local-swarms_rs-0_1_5-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/swarms_rs.json\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-01T05:37:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::Client::mk\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:81:16: 81:54 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:86:29: 86:75 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::Client::try_acquire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:306:17: 306:56 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:308:17: 308:63 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:46Z WARN  lockbud::callbacks] crate jobserver contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"is_disabled\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/lib.rs:4224:15: 4224:34 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/lib.rs:4245:13: 4245:48 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/command_helpers.rs:69:30: 69:74 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/command_helpers.rs:70:13: 70:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] crate cc contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:47Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-05-01T05:37:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"simd::runtime::get_runtime_feature\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:24:23: 24:62 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:27:9: 27:58 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:52Z WARN  lockbud::callbacks] crate httparse contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"backends::use_file::open_or_wait\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.2/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.2/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:26Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lock::RawRwLock::unlock_exclusive_slow\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lock.rs:148:21: 148:55 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lock.rs:165:13: 165:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:28Z WARN  lockbud::callbacks] crate dashmap contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:39:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:39:29Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:39:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"<sync::notify::Notified<'_> as std::ops::Drop>::drop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/sync/notify.rs:1166:36: 1166:61 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/sync/notify.rs:1181:17: 1181:57 (#0)\",\n            \"dep_kind\": \"Data\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"process::imp::pidfd_reaper::Pidfd::open\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/process/unix/pidfd_reaper.rs:35:12: 35:42 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/process/unix/pidfd_reaper.rs:46:17: 46:54 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"runtime::time::entry::StateCell::fire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/runtime/time/entry.rs:217:25: 217:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/runtime/time/entry.rs:229:9: 229:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:39:32Z WARN  lockbud::callbacks] crate tokio contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:39:33Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:282:47: 282:51 (#0)\",\n            \"second_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:229:10: 229:14 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:282:21: 282:52 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      }\n    ]\n[2025-05-01T05:39:33Z WARN  lockbud::callbacks] crate tokio_util contains bugs: { probably: 0, possibly: 1 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=swarms-rs, checker=Outdated\ntoolchain=stable, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs\ncmd=cargo +nightly-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-01 13:40:11.448543074 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\npetgraph  0.7.1    ---     0.8.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=swarms-rs, checker=SemverChecks\ntoolchain=stable, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs\ncmd=cargo +nightly-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-01 13:29:57.410299895 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building swarms-rs v0.1.5 (current)\n       Built [  33.949s] (current)\n     Parsing swarms-rs v0.1.5 (current)\nerror: unsupported rustdoc format v45 for file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/target/semver-checks/local-swarms_rs-0_1_5-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/swarms_rs.json\n"
            ]
          }
        },
        {
          "file": "examples/test_concurrent.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/examples/test_concurrent.rs (original lines from 7 to 7)\n+\n"
            ]
          }
        },
        {
          "file": "src/structs/sequential_workflow.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/swarms-rs/src/structs/sequential_workflow.rs (original lines from 74 to 74)\n-            description: \"A Workflow to solve a problem with sequential agents, each agent's output becomes the input for the next agent.\".to_string(),\n+            description: \"A Workflow to solve a problem with sequential agents, each agent's \\\n+                          output becomes the input for the next agent.\"\n+                .to_string(),\n"
            ]
          }
        },
        {
          "file": "swarms-rs/src/structs/conversation.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Mirai": [
              "warning: [MIRAI] possible attempt to add with overflow\n   --> swarms-rs/src/structs/conversation.rs:169:13\n    |\n169 |             *count.entry(message.role.to_string()).or_insert(0) += 1;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "The-Swarm-Corporation",
      "repo": "swarms-rs",
      "pkg": "binance-tools",
      "count": 5,
      "raw_reports": [
        {
          "file": "/tmp/check/repo/The-Swarm-Corporation/swarms-rs/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     backoff\nVersion:   0.4.0\nWarning:   unmaintained\nTitle:     `backoff` is unmainted.\nDate:      2025-03-04\nID:        RUSTSEC-2025-0012\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0012\nDependency tree:\nbackoff 0.4.0\n└── async-openai 0.28.1\n    └── swarms-rs 0.1.5\n        ├── knowledge-graph-memory-server 0.1.0\n        ├── fetch-mcp 0.1.0\n        ├── browser-use 0.1.0\n        └── binance-swarms-agent 0.1.0\n\nCrate:     dotenv\nVersion:   0.15.0\nWarning:   unmaintained\nTitle:     dotenv is Unmaintained\nDate:      2021-12-24\nID:        RUSTSEC-2021-0141\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0141\nDependency tree:\ndotenv 0.15.0\n├── swarms-rs 0.1.5\n│   ├── knowledge-graph-memory-server 0.1.0\n│   ├── fetch-mcp 0.1.0\n│   ├── browser-use 0.1.0\n│   └── binance-swarms-agent 0.1.0\n├── knowledge-graph-memory-server 0.1.0\n├── fetch-mcp 0.1.0\n├── browser-use 0.1.0\n└── binance-swarms-agent 0.1.0\n\nCrate:     instant\nVersion:   0.1.13\nWarning:   unmaintained\nTitle:     `instant` is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0384\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0384\nDependency tree:\ninstant 0.1.13\n└── backoff 0.4.0\n    └── async-openai 0.28.1\n        └── swarms-rs 0.1.5\n            ├── knowledge-graph-memory-server 0.1.0\n            ├── fetch-mcp 0.1.0\n            ├── browser-use 0.1.0\n            └── binance-swarms-agent 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rmcp 0.1.5\n│   └── binance-tools 0.1.0\n└── rmcp 0.1.5\n    └── swarms-rs 0.1.5\n        ├── knowledge-graph-memory-server 0.1.0\n        ├── fetch-mcp 0.1.0\n        ├── browser-use 0.1.0\n        └── binance-swarms-agent 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 756,\n    \"last-commit\": \"dde35430a1a89ed691fb4c0a0934268651719319\",\n    \"last-updated\": \"2025-04-30T14:13:20+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 351\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"backoff\",\n          \"version\": \"0.4.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"b62ddb9cb1ec0a098ad4bbf9344d0713fa193ae1a80af55febcff2627b6a00c1\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.31\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"getrandom\",\n              \"version\": \"0.2.16\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"instant\",\n              \"version\": \"0.1.13\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.16\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"rand\",\n              \"version\": \"0.8.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"tokio\",\n              \"version\": \"1.44.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0012\",\n          \"package\": \"backoff\",\n          \"title\": \"`backoff` is unmainted.\",\n          \"description\": \"The [backoff](https://crates.io/crates/backoff) crate is no longer actively maintained. For exponential backoffs/retrying, you can use the [backon](https://crates.io/crates/backon) crate.\",\n          \"date\": \"2025-03-04\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/ihrwein/backoff/issues/66\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"dotenv\",\n          \"version\": \"0.15.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"77c90badedccf4105eca100756a0b1289e191f6fcbdadd3cee1d2f614f97da8f\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0141\",\n          \"package\": \"dotenv\",\n          \"title\": \"dotenv is Unmaintained\",\n          \"description\": \"dotenv by description is meant to be used in development or testing only.\\n\\nUsing this in production may or may not be advisable.\\n\\n## Alternatives\\n\\nThe below may or may not be feasible alternative(s):\\n- [dotenvy](https://crates.io/crates/dotenvy)\",\n          \"date\": \"2021-12-24\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dotenv-rs/dotenv/issues/74\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"instant\",\n          \"version\": \"0.1.13\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222\",\n          \"dependencies\": [\n            {\n              \"name\": \"cfg-if\",\n              \"version\": \"1.0.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0384\",\n          \"package\": \"instant\",\n          \"title\": \"`instant` is unmaintained\",\n          \"description\": \"This crate is no longer maintained, and the author recommends using the maintained [`web-time`] crate instead.\\n\\n[`web-time`]: https://crates.io/crates/web-time\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [\n            \"https://crates.io/crates/instant/0.1.13\",\n            \"https://github.com/sebcrozet/instant/issues/52\"\n          ],\n          \"source\": null,\n          \"url\": null,\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-01T05:37:48Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-05-01T05:38:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"is_disabled\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/lib.rs:4224:15: 4224:34 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/lib.rs:4245:13: 4245:48 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/command_helpers.rs:69:30: 69:74 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/command_helpers.rs:70:13: 70:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:47Z WARN  lockbud::callbacks] crate cc contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"simd::runtime::get_runtime_feature\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:24:23: 24:62 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:27:9: 27:58 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:52Z WARN  lockbud::callbacks] crate httparse contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"runtime::time::entry::StateCell::fire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/runtime/time/entry.rs:217:25: 217:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/runtime/time/entry.rs:229:9: 229:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"<sync::notify::Notified<'_> as std::ops::Drop>::drop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/sync/notify.rs:1166:36: 1166:61 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/sync/notify.rs:1181:17: 1181:57 (#0)\",\n            \"dep_kind\": \"Data\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:51Z WARN  lockbud::callbacks] crate tokio contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:52Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:282:47: 282:51 (#0)\",\n            \"second_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:229:10: 229:14 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:282:21: 282:52 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      }\n    ]\n[2025-05-01T05:38:52Z WARN  lockbud::callbacks] crate tokio_util contains bugs: { probably: 0, possibly: 1 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"backends::use_file::open_or_wait\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.2/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.2/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:53Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:57Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.72/src/ssl/mod.rs:127:39: 127:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.72/src/ssl/mod.rs:134:5: 134:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.72/src/hash.rs:84:37: 84:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.72/src/hash.rs:95:5: 95:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-05-01T05:38:57Z WARN  lockbud::callbacks] crate openssl contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-05-01T05:38:58Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-05-01T05:38:58Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-05-01T05:39:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:39:03Z WARN  lockbud::callbacks] crate validator contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:39:04Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:39:04Z WARN  lockbud::callbacks] crate tracing_subscriber contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "src/api/account/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/examples/binance-tools/src/api/account/mod.rs (original lines from 1 to 1)\n+\n+\n"
            ]
          }
        },
        {
          "file": "src/api/market_data/agg_trades.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/examples/binance-tools/src/api/market_data/agg_trades.rs (original lines from 59 to 59)\n-    /// Unix timestamp in milliseconds. \n+    /// Unix timestamp in milliseconds.\n"
            ]
          }
        },
        {
          "file": "src/api/trading/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /tmp/check/repo/The-Swarm-Corporation/swarms-rs/examples/binance-tools/src/api/trading/mod.rs (original lines from 1 to 1)\n+\n+\n"
            ]
          }
        }
      ]
    },
    {
      "user": "The-Swarm-Corporation",
      "repo": "swarms-rs",
      "pkg": "binance-swarms-agent",
      "count": 2,
      "raw_reports": [
        {
          "file": "/tmp/check/repo/The-Swarm-Corporation/swarms-rs/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     backoff\nVersion:   0.4.0\nWarning:   unmaintained\nTitle:     `backoff` is unmainted.\nDate:      2025-03-04\nID:        RUSTSEC-2025-0012\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0012\nDependency tree:\nbackoff 0.4.0\n└── async-openai 0.28.1\n    └── swarms-rs 0.1.5\n        ├── knowledge-graph-memory-server 0.1.0\n        ├── fetch-mcp 0.1.0\n        ├── browser-use 0.1.0\n        └── binance-swarms-agent 0.1.0\n\nCrate:     dotenv\nVersion:   0.15.0\nWarning:   unmaintained\nTitle:     dotenv is Unmaintained\nDate:      2021-12-24\nID:        RUSTSEC-2021-0141\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0141\nDependency tree:\ndotenv 0.15.0\n├── swarms-rs 0.1.5\n│   ├── knowledge-graph-memory-server 0.1.0\n│   ├── fetch-mcp 0.1.0\n│   ├── browser-use 0.1.0\n│   └── binance-swarms-agent 0.1.0\n├── knowledge-graph-memory-server 0.1.0\n├── fetch-mcp 0.1.0\n├── browser-use 0.1.0\n└── binance-swarms-agent 0.1.0\n\nCrate:     instant\nVersion:   0.1.13\nWarning:   unmaintained\nTitle:     `instant` is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0384\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0384\nDependency tree:\ninstant 0.1.13\n└── backoff 0.4.0\n    └── async-openai 0.28.1\n        └── swarms-rs 0.1.5\n            ├── knowledge-graph-memory-server 0.1.0\n            ├── fetch-mcp 0.1.0\n            ├── browser-use 0.1.0\n            └── binance-swarms-agent 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rmcp 0.1.5\n│   └── binance-tools 0.1.0\n└── rmcp 0.1.5\n    └── swarms-rs 0.1.5\n        ├── knowledge-graph-memory-server 0.1.0\n        ├── fetch-mcp 0.1.0\n        ├── browser-use 0.1.0\n        └── binance-swarms-agent 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 756,\n    \"last-commit\": \"dde35430a1a89ed691fb4c0a0934268651719319\",\n    \"last-updated\": \"2025-04-30T14:13:20+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 351\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"backoff\",\n          \"version\": \"0.4.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"b62ddb9cb1ec0a098ad4bbf9344d0713fa193ae1a80af55febcff2627b6a00c1\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.31\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"getrandom\",\n              \"version\": \"0.2.16\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"instant\",\n              \"version\": \"0.1.13\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.16\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"rand\",\n              \"version\": \"0.8.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"tokio\",\n              \"version\": \"1.44.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0012\",\n          \"package\": \"backoff\",\n          \"title\": \"`backoff` is unmainted.\",\n          \"description\": \"The [backoff](https://crates.io/crates/backoff) crate is no longer actively maintained. For exponential backoffs/retrying, you can use the [backon](https://crates.io/crates/backon) crate.\",\n          \"date\": \"2025-03-04\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/ihrwein/backoff/issues/66\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"dotenv\",\n          \"version\": \"0.15.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"77c90badedccf4105eca100756a0b1289e191f6fcbdadd3cee1d2f614f97da8f\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0141\",\n          \"package\": \"dotenv\",\n          \"title\": \"dotenv is Unmaintained\",\n          \"description\": \"dotenv by description is meant to be used in development or testing only.\\n\\nUsing this in production may or may not be advisable.\\n\\n## Alternatives\\n\\nThe below may or may not be feasible alternative(s):\\n- [dotenvy](https://crates.io/crates/dotenvy)\",\n          \"date\": \"2021-12-24\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dotenv-rs/dotenv/issues/74\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"instant\",\n          \"version\": \"0.1.13\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222\",\n          \"dependencies\": [\n            {\n              \"name\": \"cfg-if\",\n              \"version\": \"1.0.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0384\",\n          \"package\": \"instant\",\n          \"title\": \"`instant` is unmaintained\",\n          \"description\": \"This crate is no longer maintained, and the author recommends using the maintained [`web-time`] crate instead.\\n\\n[`web-time`]: https://crates.io/crates/web-time\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [\n            \"https://crates.io/crates/instant/0.1.13\",\n            \"https://github.com/sebcrozet/instant/issues/52\"\n          ],\n          \"source\": null,\n          \"url\": null,\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-01T05:37:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::Client::mk\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:81:16: 81:54 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:86:29: 86:75 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::Client::try_acquire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:306:17: 306:56 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:308:17: 308:63 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:46Z WARN  lockbud::callbacks] crate jobserver contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:47Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"is_disabled\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/lib.rs:4224:15: 4224:34 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/lib.rs:4245:13: 4245:48 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/command_helpers.rs:69:30: 69:74 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/command_helpers.rs:70:13: 70:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] crate cc contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"simd::runtime::get_runtime_feature\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:24:23: 24:62 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:27:9: 27:58 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:52Z WARN  lockbud::callbacks] crate httparse contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"runtime::time::entry::StateCell::fire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/runtime/time/entry.rs:217:25: 217:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/runtime/time/entry.rs:229:9: 229:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"<sync::notify::Notified<'_> as std::ops::Drop>::drop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/sync/notify.rs:1166:36: 1166:61 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/sync/notify.rs:1181:17: 1181:57 (#0)\",\n            \"dep_kind\": \"Data\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"process::imp::pidfd_reaper::Pidfd::open\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/process/unix/pidfd_reaper.rs:35:12: 35:42 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/process/unix/pidfd_reaper.rs:46:17: 46:54 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:03Z WARN  lockbud::callbacks] crate tokio contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:11Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:282:47: 282:51 (#0)\",\n            \"second_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:229:10: 229:14 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:282:21: 282:52 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      }\n    ]\n[2025-05-01T05:38:11Z WARN  lockbud::callbacks] crate tokio_util contains bugs: { probably: 0, possibly: 1 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"backends::use_file::open_or_wait\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.2/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.2/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:26Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lock::RawRwLock::unlock_exclusive_slow\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lock.rs:148:21: 148:55 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lock.rs:165:13: 165:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:28Z WARN  lockbud::callbacks] crate dashmap contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:32Z WARN  lockbud::callbacks] crate tracing_subscriber contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        }
      ]
    },
    {
      "user": "The-Swarm-Corporation",
      "repo": "swarms-rs",
      "pkg": "browser-use",
      "count": 2,
      "raw_reports": [
        {
          "file": "/tmp/check/repo/The-Swarm-Corporation/swarms-rs/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     backoff\nVersion:   0.4.0\nWarning:   unmaintained\nTitle:     `backoff` is unmainted.\nDate:      2025-03-04\nID:        RUSTSEC-2025-0012\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0012\nDependency tree:\nbackoff 0.4.0\n└── async-openai 0.28.1\n    └── swarms-rs 0.1.5\n        ├── knowledge-graph-memory-server 0.1.0\n        ├── fetch-mcp 0.1.0\n        ├── browser-use 0.1.0\n        └── binance-swarms-agent 0.1.0\n\nCrate:     dotenv\nVersion:   0.15.0\nWarning:   unmaintained\nTitle:     dotenv is Unmaintained\nDate:      2021-12-24\nID:        RUSTSEC-2021-0141\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0141\nDependency tree:\ndotenv 0.15.0\n├── swarms-rs 0.1.5\n│   ├── knowledge-graph-memory-server 0.1.0\n│   ├── fetch-mcp 0.1.0\n│   ├── browser-use 0.1.0\n│   └── binance-swarms-agent 0.1.0\n├── knowledge-graph-memory-server 0.1.0\n├── fetch-mcp 0.1.0\n├── browser-use 0.1.0\n└── binance-swarms-agent 0.1.0\n\nCrate:     instant\nVersion:   0.1.13\nWarning:   unmaintained\nTitle:     `instant` is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0384\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0384\nDependency tree:\ninstant 0.1.13\n└── backoff 0.4.0\n    └── async-openai 0.28.1\n        └── swarms-rs 0.1.5\n            ├── knowledge-graph-memory-server 0.1.0\n            ├── fetch-mcp 0.1.0\n            ├── browser-use 0.1.0\n            └── binance-swarms-agent 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rmcp 0.1.5\n│   └── binance-tools 0.1.0\n└── rmcp 0.1.5\n    └── swarms-rs 0.1.5\n        ├── knowledge-graph-memory-server 0.1.0\n        ├── fetch-mcp 0.1.0\n        ├── browser-use 0.1.0\n        └── binance-swarms-agent 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 756,\n    \"last-commit\": \"dde35430a1a89ed691fb4c0a0934268651719319\",\n    \"last-updated\": \"2025-04-30T14:13:20+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 351\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"backoff\",\n          \"version\": \"0.4.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"b62ddb9cb1ec0a098ad4bbf9344d0713fa193ae1a80af55febcff2627b6a00c1\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.31\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"getrandom\",\n              \"version\": \"0.2.16\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"instant\",\n              \"version\": \"0.1.13\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.16\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"rand\",\n              \"version\": \"0.8.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"tokio\",\n              \"version\": \"1.44.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0012\",\n          \"package\": \"backoff\",\n          \"title\": \"`backoff` is unmainted.\",\n          \"description\": \"The [backoff](https://crates.io/crates/backoff) crate is no longer actively maintained. For exponential backoffs/retrying, you can use the [backon](https://crates.io/crates/backon) crate.\",\n          \"date\": \"2025-03-04\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/ihrwein/backoff/issues/66\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"dotenv\",\n          \"version\": \"0.15.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"77c90badedccf4105eca100756a0b1289e191f6fcbdadd3cee1d2f614f97da8f\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0141\",\n          \"package\": \"dotenv\",\n          \"title\": \"dotenv is Unmaintained\",\n          \"description\": \"dotenv by description is meant to be used in development or testing only.\\n\\nUsing this in production may or may not be advisable.\\n\\n## Alternatives\\n\\nThe below may or may not be feasible alternative(s):\\n- [dotenvy](https://crates.io/crates/dotenvy)\",\n          \"date\": \"2021-12-24\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dotenv-rs/dotenv/issues/74\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"instant\",\n          \"version\": \"0.1.13\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222\",\n          \"dependencies\": [\n            {\n              \"name\": \"cfg-if\",\n              \"version\": \"1.0.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0384\",\n          \"package\": \"instant\",\n          \"title\": \"`instant` is unmaintained\",\n          \"description\": \"This crate is no longer maintained, and the author recommends using the maintained [`web-time`] crate instead.\\n\\n[`web-time`]: https://crates.io/crates/web-time\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [\n            \"https://crates.io/crates/instant/0.1.13\",\n            \"https://github.com/sebcrozet/instant/issues/52\"\n          ],\n          \"source\": null,\n          \"url\": null,\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-01T05:37:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::Client::mk\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:81:16: 81:54 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:86:29: 86:75 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::Client::try_acquire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:306:17: 306:56 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:308:17: 308:63 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:46Z WARN  lockbud::callbacks] crate jobserver contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"is_disabled\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/lib.rs:4224:15: 4224:34 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/lib.rs:4245:13: 4245:48 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/command_helpers.rs:69:30: 69:74 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/command_helpers.rs:70:13: 70:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] crate cc contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:47Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"runtime::time::entry::StateCell::fire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/runtime/time/entry.rs:217:25: 217:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/runtime/time/entry.rs:229:9: 229:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"<sync::notify::Notified<'_> as std::ops::Drop>::drop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/sync/notify.rs:1166:36: 1166:61 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/sync/notify.rs:1181:17: 1181:57 (#0)\",\n            \"dep_kind\": \"Data\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"process::imp::pidfd_reaper::Pidfd::open\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/process/unix/pidfd_reaper.rs:35:12: 35:42 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/process/unix/pidfd_reaper.rs:46:17: 46:54 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:03Z WARN  lockbud::callbacks] crate tokio contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"simd::runtime::get_runtime_feature\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:24:23: 24:62 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:27:9: 27:58 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:52Z WARN  lockbud::callbacks] crate httparse contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:11Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:282:47: 282:51 (#0)\",\n            \"second_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:229:10: 229:14 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:282:21: 282:52 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      }\n    ]\n[2025-05-01T05:38:11Z WARN  lockbud::callbacks] crate tokio_util contains bugs: { probably: 0, possibly: 1 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"backends::use_file::open_or_wait\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.2/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.2/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:26Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lock::RawRwLock::unlock_exclusive_slow\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lock.rs:148:21: 148:55 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lock.rs:165:13: 165:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:28Z WARN  lockbud::callbacks] crate dashmap contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:32Z WARN  lockbud::callbacks] crate tracing_subscriber contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        }
      ]
    },
    {
      "user": "The-Swarm-Corporation",
      "repo": "swarms-rs",
      "pkg": "fetch-mcp",
      "count": 2,
      "raw_reports": [
        {
          "file": "/tmp/check/repo/The-Swarm-Corporation/swarms-rs/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     backoff\nVersion:   0.4.0\nWarning:   unmaintained\nTitle:     `backoff` is unmainted.\nDate:      2025-03-04\nID:        RUSTSEC-2025-0012\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0012\nDependency tree:\nbackoff 0.4.0\n└── async-openai 0.28.1\n    └── swarms-rs 0.1.5\n        ├── knowledge-graph-memory-server 0.1.0\n        ├── fetch-mcp 0.1.0\n        ├── browser-use 0.1.0\n        └── binance-swarms-agent 0.1.0\n\nCrate:     dotenv\nVersion:   0.15.0\nWarning:   unmaintained\nTitle:     dotenv is Unmaintained\nDate:      2021-12-24\nID:        RUSTSEC-2021-0141\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0141\nDependency tree:\ndotenv 0.15.0\n├── swarms-rs 0.1.5\n│   ├── knowledge-graph-memory-server 0.1.0\n│   ├── fetch-mcp 0.1.0\n│   ├── browser-use 0.1.0\n│   └── binance-swarms-agent 0.1.0\n├── knowledge-graph-memory-server 0.1.0\n├── fetch-mcp 0.1.0\n├── browser-use 0.1.0\n└── binance-swarms-agent 0.1.0\n\nCrate:     instant\nVersion:   0.1.13\nWarning:   unmaintained\nTitle:     `instant` is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0384\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0384\nDependency tree:\ninstant 0.1.13\n└── backoff 0.4.0\n    └── async-openai 0.28.1\n        └── swarms-rs 0.1.5\n            ├── knowledge-graph-memory-server 0.1.0\n            ├── fetch-mcp 0.1.0\n            ├── browser-use 0.1.0\n            └── binance-swarms-agent 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rmcp 0.1.5\n│   └── binance-tools 0.1.0\n└── rmcp 0.1.5\n    └── swarms-rs 0.1.5\n        ├── knowledge-graph-memory-server 0.1.0\n        ├── fetch-mcp 0.1.0\n        ├── browser-use 0.1.0\n        └── binance-swarms-agent 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 756,\n    \"last-commit\": \"dde35430a1a89ed691fb4c0a0934268651719319\",\n    \"last-updated\": \"2025-04-30T14:13:20+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 351\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"backoff\",\n          \"version\": \"0.4.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"b62ddb9cb1ec0a098ad4bbf9344d0713fa193ae1a80af55febcff2627b6a00c1\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.31\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"getrandom\",\n              \"version\": \"0.2.16\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"instant\",\n              \"version\": \"0.1.13\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.16\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"rand\",\n              \"version\": \"0.8.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"tokio\",\n              \"version\": \"1.44.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0012\",\n          \"package\": \"backoff\",\n          \"title\": \"`backoff` is unmainted.\",\n          \"description\": \"The [backoff](https://crates.io/crates/backoff) crate is no longer actively maintained. For exponential backoffs/retrying, you can use the [backon](https://crates.io/crates/backon) crate.\",\n          \"date\": \"2025-03-04\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/ihrwein/backoff/issues/66\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"dotenv\",\n          \"version\": \"0.15.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"77c90badedccf4105eca100756a0b1289e191f6fcbdadd3cee1d2f614f97da8f\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0141\",\n          \"package\": \"dotenv\",\n          \"title\": \"dotenv is Unmaintained\",\n          \"description\": \"dotenv by description is meant to be used in development or testing only.\\n\\nUsing this in production may or may not be advisable.\\n\\n## Alternatives\\n\\nThe below may or may not be feasible alternative(s):\\n- [dotenvy](https://crates.io/crates/dotenvy)\",\n          \"date\": \"2021-12-24\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dotenv-rs/dotenv/issues/74\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"instant\",\n          \"version\": \"0.1.13\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222\",\n          \"dependencies\": [\n            {\n              \"name\": \"cfg-if\",\n              \"version\": \"1.0.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0384\",\n          \"package\": \"instant\",\n          \"title\": \"`instant` is unmaintained\",\n          \"description\": \"This crate is no longer maintained, and the author recommends using the maintained [`web-time`] crate instead.\\n\\n[`web-time`]: https://crates.io/crates/web-time\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [\n            \"https://crates.io/crates/instant/0.1.13\",\n            \"https://github.com/sebcrozet/instant/issues/52\"\n          ],\n          \"source\": null,\n          \"url\": null,\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-01T05:37:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::Client::mk\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:81:16: 81:54 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:86:29: 86:75 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::Client::try_acquire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:306:17: 306:56 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:308:17: 308:63 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:46Z WARN  lockbud::callbacks] crate jobserver contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"is_disabled\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/lib.rs:4224:15: 4224:34 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/lib.rs:4245:13: 4245:48 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/command_helpers.rs:69:30: 69:74 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/command_helpers.rs:70:13: 70:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] crate cc contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:47Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"runtime::time::entry::StateCell::fire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/runtime/time/entry.rs:217:25: 217:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/runtime/time/entry.rs:229:9: 229:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"<sync::notify::Notified<'_> as std::ops::Drop>::drop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/sync/notify.rs:1166:36: 1166:61 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/sync/notify.rs:1181:17: 1181:57 (#0)\",\n            \"dep_kind\": \"Data\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"process::imp::pidfd_reaper::Pidfd::open\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/process/unix/pidfd_reaper.rs:35:12: 35:42 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/process/unix/pidfd_reaper.rs:46:17: 46:54 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:03Z WARN  lockbud::callbacks] crate tokio contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"simd::runtime::get_runtime_feature\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:24:23: 24:62 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:27:9: 27:58 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:52Z WARN  lockbud::callbacks] crate httparse contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:11Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:282:47: 282:51 (#0)\",\n            \"second_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:229:10: 229:14 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:282:21: 282:52 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      }\n    ]\n[2025-05-01T05:38:11Z WARN  lockbud::callbacks] crate tokio_util contains bugs: { probably: 0, possibly: 1 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"backends::use_file::open_or_wait\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.2/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.2/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:26Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lock::RawRwLock::unlock_exclusive_slow\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lock.rs:148:21: 148:55 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lock.rs:165:13: 165:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:28Z WARN  lockbud::callbacks] crate dashmap contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:32Z WARN  lockbud::callbacks] crate tracing_subscriber contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        }
      ]
    },
    {
      "user": "The-Swarm-Corporation",
      "repo": "swarms-rs",
      "pkg": "knowledge-graph-memory-server",
      "count": 2,
      "raw_reports": [
        {
          "file": "/tmp/check/repo/The-Swarm-Corporation/swarms-rs/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     backoff\nVersion:   0.4.0\nWarning:   unmaintained\nTitle:     `backoff` is unmainted.\nDate:      2025-03-04\nID:        RUSTSEC-2025-0012\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0012\nDependency tree:\nbackoff 0.4.0\n└── async-openai 0.28.1\n    └── swarms-rs 0.1.5\n        ├── knowledge-graph-memory-server 0.1.0\n        ├── fetch-mcp 0.1.0\n        ├── browser-use 0.1.0\n        └── binance-swarms-agent 0.1.0\n\nCrate:     dotenv\nVersion:   0.15.0\nWarning:   unmaintained\nTitle:     dotenv is Unmaintained\nDate:      2021-12-24\nID:        RUSTSEC-2021-0141\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0141\nDependency tree:\ndotenv 0.15.0\n├── swarms-rs 0.1.5\n│   ├── knowledge-graph-memory-server 0.1.0\n│   ├── fetch-mcp 0.1.0\n│   ├── browser-use 0.1.0\n│   └── binance-swarms-agent 0.1.0\n├── knowledge-graph-memory-server 0.1.0\n├── fetch-mcp 0.1.0\n├── browser-use 0.1.0\n└── binance-swarms-agent 0.1.0\n\nCrate:     instant\nVersion:   0.1.13\nWarning:   unmaintained\nTitle:     `instant` is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0384\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0384\nDependency tree:\ninstant 0.1.13\n└── backoff 0.4.0\n    └── async-openai 0.28.1\n        └── swarms-rs 0.1.5\n            ├── knowledge-graph-memory-server 0.1.0\n            ├── fetch-mcp 0.1.0\n            ├── browser-use 0.1.0\n            └── binance-swarms-agent 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rmcp 0.1.5\n│   └── binance-tools 0.1.0\n└── rmcp 0.1.5\n    └── swarms-rs 0.1.5\n        ├── knowledge-graph-memory-server 0.1.0\n        ├── fetch-mcp 0.1.0\n        ├── browser-use 0.1.0\n        └── binance-swarms-agent 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 756,\n    \"last-commit\": \"dde35430a1a89ed691fb4c0a0934268651719319\",\n    \"last-updated\": \"2025-04-30T14:13:20+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 351\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"backoff\",\n          \"version\": \"0.4.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"b62ddb9cb1ec0a098ad4bbf9344d0713fa193ae1a80af55febcff2627b6a00c1\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.31\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"getrandom\",\n              \"version\": \"0.2.16\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"instant\",\n              \"version\": \"0.1.13\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.16\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"rand\",\n              \"version\": \"0.8.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"tokio\",\n              \"version\": \"1.44.2\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0012\",\n          \"package\": \"backoff\",\n          \"title\": \"`backoff` is unmainted.\",\n          \"description\": \"The [backoff](https://crates.io/crates/backoff) crate is no longer actively maintained. For exponential backoffs/retrying, you can use the [backon](https://crates.io/crates/backon) crate.\",\n          \"date\": \"2025-03-04\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/ihrwein/backoff/issues/66\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"dotenv\",\n          \"version\": \"0.15.0\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"77c90badedccf4105eca100756a0b1289e191f6fcbdadd3cee1d2f614f97da8f\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0141\",\n          \"package\": \"dotenv\",\n          \"title\": \"dotenv is Unmaintained\",\n          \"description\": \"dotenv by description is meant to be used in development or testing only.\\n\\nUsing this in production may or may not be advisable.\\n\\n## Alternatives\\n\\nThe below may or may not be feasible alternative(s):\\n- [dotenvy](https://crates.io/crates/dotenvy)\",\n          \"date\": \"2021-12-24\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dotenv-rs/dotenv/issues/74\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"instant\",\n          \"version\": \"0.1.13\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222\",\n          \"dependencies\": [\n            {\n              \"name\": \"cfg-if\",\n              \"version\": \"1.0.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0384\",\n          \"package\": \"instant\",\n          \"title\": \"`instant` is unmaintained\",\n          \"description\": \"This crate is no longer maintained, and the author recommends using the maintained [`web-time`] crate instead.\\n\\n[`web-time`]: https://crates.io/crates/web-time\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [\n            \"https://crates.io/crates/instant/0.1.13\",\n            \"https://github.com/sebcrozet/instant/issues/52\"\n          ],\n          \"source\": null,\n          \"url\": null,\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-01T05:37:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::Client::mk\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:81:16: 81:54 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:86:29: 86:75 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::Client::try_acquire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:306:17: 306:56 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/unix.rs:308:17: 308:63 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:46Z WARN  lockbud::callbacks] crate jobserver contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"is_disabled\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/lib.rs:4224:15: 4224:34 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/lib.rs:4245:13: 4245:48 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/command_helpers.rs:69:30: 69:74 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.20/src/command_helpers.rs:70:13: 70:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] crate cc contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:47Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:48Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"runtime::time::entry::StateCell::fire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/runtime/time/entry.rs:217:25: 217:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/runtime/time/entry.rs:229:9: 229:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"<sync::notify::Notified<'_> as std::ops::Drop>::drop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/sync/notify.rs:1166:36: 1166:61 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/sync/notify.rs:1181:17: 1181:57 (#0)\",\n            \"dep_kind\": \"Data\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"process::imp::pidfd_reaper::Pidfd::open\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/process/unix/pidfd_reaper.rs:35:12: 35:42 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.44.2/src/process/unix/pidfd_reaper.rs:46:17: 46:54 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:03Z WARN  lockbud::callbacks] crate tokio contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:37:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"simd::runtime::get_runtime_feature\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:24:23: 24:62 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:27:9: 27:58 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:37:52Z WARN  lockbud::callbacks] crate httparse contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:11Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:282:47: 282:51 (#0)\",\n            \"second_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:229:10: 229:14 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/sync/cancellation_token/tree_node.rs:282:21: 282:52 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      }\n    ]\n[2025-05-01T05:38:11Z WARN  lockbud::callbacks] crate tokio_util contains bugs: { probably: 0, possibly: 1 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"backends::use_file::open_or_wait\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.2/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.2/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:26Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lock::RawRwLock::unlock_exclusive_slow\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lock.rs:148:21: 148:55 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-6.1.0/src/lock.rs:165:13: 165:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:28Z WARN  lockbud::callbacks] crate dashmap contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-01T05:38:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-01T05:38:32Z WARN  lockbud::callbacks] crate tracing_subscriber contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}